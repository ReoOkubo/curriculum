■ 開発

ウォーターフォール開発 : 開発を各工程に分けて進めて行き、成果物を確認の上次に進むから管理しやすく、ミスが起きにくい手法。
アジャイル開発 : クライアントの要望に応えるシステムを出来るだけ早くリリースするため、優先順位をつけて短期間で納品を目指す手法。
マイグレーション : プログラムやデータ、OSなどの環境やプラットフォームを移行、変換すること。
デグレーション : 変更することによって以前よりおかしくなること。
デプロイ : 作ったプログラムを置いて使える状態にすること。
コンフリクト : 複数の装置やプログラムなどが同じ資源を同時に利用しようとして競合状態になってしまうこと。
環境 : 開発したり、テストしたりする場所。
開発環境（ローカル） : システムを開発するために必要な機材やソフトウェアなどの組み合わせのこと。
検証環境（ステージング）: 最終段階で用意される、実際の運用環境と変わらない環境のこと。
本番環境 : 実際に出来上がった製品の利用に伴い組み合わせた施設や機材、ソフトウェアなどの運用環境のこと。
設計書／仕様書 : 商品を作る際にどのようなものが作られるか書かれたもの。
要件定義 : システムやソフトウェアの開発において、実装すべき機能や満たすべき性能などのを明確にしていく作業のこと。
基本設計書 : クライアントからのヒアリングにより全体像や概要をまとめたもの。
詳細設計書 : 詳細をまとめた資料で、プログラムを作る時に見る資料。
テスト : システムが正常に動くかどうか確認する。
単体テスト（UT） : 単一の部品を対象に行うテスト。
結合テスト（CT／IT） : システム開発において合体しても動くか確認するテスト。
総合テスト（ST） : 全体を通して、完成してるか確認するテスト。
エビデンス／証跡  : 証拠となる画像やログのこと。
データパッチ : 後付けのデータのこと。
Access : 機器やソフトウェア、システム、情報などを利用可能な状態にすること。
マクロ : 操作手順などを記録してその内容を自動的に実行させる機能。
VBA : 利用者が簡易なプログラムを記述して実行することで複雑な処理の自動化などを行なうことができるもの。
GAS（Google Apps Script） : Googleが提供しているjavascriptをべースに考えたプログラミング言語。
API : アプリケーションの開発を容易にするためのソフトウェア資源のこと。
WEB API : インターネットを経由して行われるAPIのこと。
REST API : RESTと呼ばれる設計形式に従って制定されたもの。
SOAP : 異なるコンピュータ上で動作するプログラム同士がネットワークを通じてメッセージを伝え合い、連携して動作するための通信プロトコル（規約）の一つ。
Ajax : javascriptを使って非同期通信をすること。
XML : 文書やデータの意味や構造を記述するためのマークアップ言語の一つ。
JSON : Javascriptと相性の良いテキストベースのデータ形式。
ステータスコード : HTTPにおいてWebサーバからのレスポンスの意味を表す３桁の数字。
クロスオリジン（Cross-Origin）／CORS（Cross-Origin Resource Sharing）: 異なるドメイン同士でリソースを共有する仕組み。
バリデーション : 適切な記述・構築されているか検証すること。
データ連携 : 格納先が違う異なるデータを、共有・活用すること。
Daemon : UNIX系OSに常駐しているプログラムのこと。
CRON : 設定したスケジュールに従ってプログラムを起動してくれるもの。
バッチ : 複数のプログラムからなる作業において、あらかじめ一連の手順を登録しておき、まとめて連続的に実行する方式。
ログ : 通信情報や履歴などの記録のこと。
CSV : 書式、データ、ファイルがカンマで区切られている形式。
TSV : 項目間でタブで区切られている形式。
プルリクエスト（マージリクエスト）: 開発者のローカルリポジトリでの変更を他の開発者に通知する機能。
■ チケット管理ツール

asana : 簡単に使えるように作られたワークマネジメントツール。
Backlog : ヌーラボが提供しているSaaS型のプロジェクト管理ツール。
Jooto : クラウド型プロジェクト管理ツール。
Readmine : オープンソースソフトウェアである管理ツール。
Trello : タスクを視覚的に管理できるカンバン方式ツール。
■ バージョン管理

集中型 : 一つにのみ集中している処理形態。
分散型 : 複数のコンピュータなどに分散して行う処理形態。
Github : バージョン管理システムで管理するデータをインターネット上で共有・公開することができるネットサービスの一つ。
Backlog : これからやる予定、途中で止まっている状態のシステムのこと。
SourceTree : windows/macで使えるgitのデスクトップクライアント。
Tortoise SVN : バージョン管理システムであるSubversionのクライアントフロントエンド。
Git Flow : Gitを使う際に運用ルールをまとめたツール。
master : 基礎となるデータのこと。
release : 納品のこと。
develop : 開発のこと。
feature : 機能のこと。
■ FW／ライブラリ

FW : まとめられた型、枠組み。
Spring Framework : JavaのWebフレームワーク。
Struts : オーソドックスなフレームワーク。
JSF（Java Server Faces） : ユーザーインターフェース構築のためのフレームワークで、企業向けのJavaプラットフォームJava EEに含まれている。
ライブラリ : たくさんのプログラムの部品を集めて人まとまりにしたファイルのこと。
Bootstrap : コンピューターの電源を入れてOSを起動して利用可能のなるまで自動的に行われる処理のこと。
Flyway : データベースの状態をバージョン管理できるようになるツール。
Jackson : Javaで使えるJSONライブラリ。
jQuery : javascriptを容易に記述できるようにするために設計されたjavascriptライブラリ。
Junit : Java言語で開発されたプログラムの単体テストを行うためのソフトウェア。
Log4j : javaプログラム用のログAPI。
Lombok :  Java言語におけるボイラープレートコードをソースコードから排除するために使用するライブラリ。
ORM : データベースとオブジェクト指向プログラミング言語の間の非互換なデータを変換するプログラミング技法。
■ 連絡ツール

ChatWork : ビジネスコミュニケーションに特化したツール。
Slack : 人気なビジネス向けコラボレーションツール。
IP Messenger : 同じネットワーク内のメンバーを自動認識し、簡単にクライアント同士がリアルタイムに情報交換できるソフトウェア。
■ Java

Javadoc : javaのソースコードに一定の書式やコメントを記述することでクラスの説明やメソッドの呼び出し方などをまとめてくれる仕組み。
アノテーション : 関連する情報を注釈としてつける仕組み。
メモリ管理 : オブジェクトをどのように割当てるかという管理。
ヒープ : オブジェクト格納するための領域。
GC : 不要になった箇所だけを開放する機能。
GoF : デザインパターンの一種。
デザインパターン : javaで使われる設計パターン。
■ その他

オブジェクト指向 : モノの作成と操作として考えること。
バッチ処理 : 一定量のデータを集め、一括処理するための処理方法。
コンパイル : プログラミング言語で書かれたソースコードを解析し、コンピュータが直接実行可能な形式のプログラムに変換すること。
カバレッジ : カバーしている範囲。
プラットホーム : ある機器やソフトウェアを動作させるのに必要な、基盤となる装置やソフトウェア、サービス、あるいはそれらの組み合わせのこと。
